apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-deployment
  namespace: default  # Adjust the namespace if necessary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
        - name: envoy
          image: envoyproxy/envoy-dev
          ports:
            - containerPort: 10000
              name: envoy-port
            - containerPort: 9901
              name: admin-port
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy/envoy.yaml
              subPath: envoy.yaml
              readOnly: true
      volumes:
        - name: envoy-config
          configMap:
            name: envoy-config


---

apiVersion: v1
kind: Service
metadata:
  name: envoy-service
  namespace: default  # Adjust the namespace if necessary
spec:
  selector:
    app: envoy
  ports:
    - protocol: TCP
      port: 10000
      targetPort: 10000
      name: envoy-port  # Added unique name for port 10000
    - protocol: TCP
      port: 9901
      targetPort: 9901
      name: admin-port  # Added unique name for port 9901
  type: LoadBalancer  # You can change this to ClusterIP or NodePort as needed

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: default  # Adjust the namespace if necessary
data:
  envoy.yaml: |
    static_resources:

      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    codec_type: AUTO
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: 
                            - "*"
                          routes:
                            - match: 
                                prefix: "/"
                              route: 
                                cluster: poc_server
                    http_filters:
                      - name: envoy.filters.http.jwt_authn
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                          providers:
                            auth_keycloak:
                              issuer: http://34.135.41.24:8080/realms/Envoy-Keycloak-POC
                              remote_jwks:
                                http_uri:
                                  uri: http://34.135.41.24:8080/realms/Envoy-Keycloak-POC/protocol/openid-connect/certs
                                  cluster: keycloak
                                  timeout: 5s
                                cache_duration:
                                  seconds: 300
                          rules:
                            - match: 
                                prefix: "/"
                              requires: 
                                provider_name: auth_keycloak
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
        - name: poc_server
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: poc_server
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: server-service.default.svc.cluster.local
                          port_value: 8081  # TODO: use environment variable SERVER_PUBLISHED_PORT for server port
        - name: keycloak
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: keycloak
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 34.135.41.24
                          port_value: 8080  # TODO: use environment variable KEYCLOAK_PUBLISHED_PORT for server port

    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: 
          address: 0.0.0.0
          port_value: 9901
